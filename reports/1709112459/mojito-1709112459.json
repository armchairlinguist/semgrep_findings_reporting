[{"id": 29239259, "ref": "master", "syntactic_id": "686a468e8f3d7a44d570eea42c221ecd", "match_based_id": "92862fe6a239e9ec076ff57077ea9a154963539db8a8ab2b6049fee93cb159ad36cc7c20762a5149da40c8864f683f9e53b68f9cd45d99f89bb6717acef31917_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "high", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953452Z", "relevant_since": "2023-07-28T10:50:40.949646Z", "rule_name": "dockerfile.security.missing-user-entrypoint.missing-user-entrypoint", "rule_message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.", "location": {"file_path": "webapp/src/main/docker/Dockerfile", "line": 6, "column": 1, "end_line": 6, "end_column": 86}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239258, "ref": "master", "syntactic_id": "9f0f584269e73824723eb0a8362f3c10", "match_based_id": "1160539ecfb1c8635ad3e749ce1df5350d2527c830efe312c12b6afc3b6cbb997c3c4102c97e20d2e7b003cb81f15ca0cb6aa4582193f542e7ae56f77cad5cee_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953442Z", "relevant_since": "2023-07-28T10:50:40.949644Z", "rule_name": "java.lang.security.audit.command-injection-process-builder.command-injection-process-builder", "rule_message": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.", "location": {"file_path": "cli/src/main/java/com/box/l10n/mojito/cli/command/RetryCommand.java", "line": 131, "column": 5, "end_line": 131, "end_column": 38}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239257, "ref": "master", "syntactic_id": "a73728111751cfc8c709c9305f007d38", "match_based_id": "cd0c4502ebd6288b11911c224b531c8c8565a821bcfc458d9388c9164cf8f926d35eb15cc263d93dedbc27d18f503d5319ccf53b29643393011284eeb0811429_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953431Z", "relevant_since": "2023-07-28T10:50:40.949641Z", "rule_name": "java.lang.security.audit.command-injection-process-builder.command-injection-process-builder", "rule_message": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.", "location": {"file_path": "common/src/main/java/com/box/l10n/mojito/shell/Shell.java", "line": 21, "column": 7, "end_line": 21, "end_column": 47}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239256, "ref": "master", "syntactic_id": "b9a3630ce8e6a8773fef02dba66a6e35", "match_based_id": "f7aecf1b7f927e675538c3814c0dee56da1ea5ffd5947b87bb3fc0124511fd8b9d25a36ed5af3f6729ea70e5cf05454dff5e06362ea9cd29d9048d3f5394f163_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953421Z", "relevant_since": "2023-07-28T10:50:40.949638Z", "rule_name": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "rule_message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/nativecriteria/JpaQueryProvider.java", "line": 17, "column": 36, "end_line": 17, "end_column": 61}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239255, "ref": "master", "syntactic_id": "17560cb58603c2d4d073d729aa329bb9", "match_based_id": "1d0a647b2af398694a110c5e3e509fc98eea1e2851f1ef37680ec69d7a2b796e4b516d3244df4bb35421ee84286915cca3d5d4649381e663f013e59825ed96cd_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "high", "created_at": "2023-07-28T10:50:40.953411Z", "relevant_since": "2023-07-28T10:50:40.949636Z", "rule_name": "java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing", "rule_message": "DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature \"http://apache.org/xml/features/disallow-doctype-decl\" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features \"http://xml.org/sax/features/external-general-entities\" and \"http://xml.org/sax/features/external-parameter-entities\" to false.", "location": {"file_path": "common/src/main/java/com/box/l10n/mojito/okapi/filters/XMLFilter.java", "line": 95, "column": 7, "end_line": 95, "end_column": 46}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239254, "ref": "master", "syntactic_id": "1ded4b7c30165015d5881e052a6841ff", "match_based_id": "4a4800c04488b8884576412e8650b659c354fa99eb96aa0e193029597bd40e3d285f63d83b6f4b5e19447dc6bf6bef9355d1b55b3a0a4fe1fe61561ea3be729b_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "high", "created_at": "2023-07-28T10:50:40.953401Z", "relevant_since": "2023-07-28T10:50:40.949633Z", "rule_name": "java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing", "rule_message": "DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature \"http://apache.org/xml/features/disallow-doctype-decl\" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features \"http://xml.org/sax/features/external-general-entities\" and \"http://xml.org/sax/features/external-parameter-entities\" to false.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/android/strings/AndroidStringDocumentUtils.java", "line": 15, "column": 5, "end_line": 15, "end_column": 57}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239253, "ref": "master", "syntactic_id": "a6a35215549eca38ad1be16d339bcdb3", "match_based_id": "d5206ad4ca1709f0dbb1545f9f2e2602c982493159c1b572d02ade8a241b3ac64c72d78ac690ebbe059c7d741d0bd69e360498410ec2b199ca9f5ce84bd7cbbf_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "high", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953391Z", "relevant_since": "2023-07-28T10:50:40.949630Z", "rule_name": "java.servlets.security.crlf-injection-logs-deepsemgrep.crlf-injection-logs-deepsemgrep", "rule_message": "When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/security/ShowPageAuthenticationSuccessHandler.java", "line": 30, "column": 5, "end_line": 30, "end_column": 69}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239252, "ref": "master", "syntactic_id": "df322bd1d069d69b191f50fe42844d5b", "match_based_id": "34b0718867bc6be41e9fb63a02bb9e37f92d255bbdcfd0d4e2f23d3e5a7abe19d7604c1a69e607d64bcee997300c04be8a0e8c828197f5c754afdb5ae2b22e7a_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953380Z", "relevant_since": "2023-07-28T10:50:40.949628Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 8, "column": 27, "end_line": 8, "end_column": 40}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239251, "ref": "master", "syntactic_id": "150646d80994271822fa5e4a2ad8d103", "match_based_id": "34b0718867bc6be41e9fb63a02bb9e37f92d255bbdcfd0d4e2f23d3e5a7abe19d7604c1a69e607d64bcee997300c04be8a0e8c828197f5c754afdb5ae2b22e7a_1", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953370Z", "relevant_since": "2023-07-28T10:50:40.949624Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 9, "column": 27, "end_line": 9, "end_column": 40}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239250, "ref": "master", "syntactic_id": "1eda0db57d800c76f1a218f1975c66f9", "match_based_id": "34b0718867bc6be41e9fb63a02bb9e37f92d255bbdcfd0d4e2f23d3e5a7abe19d7604c1a69e607d64bcee997300c04be8a0e8c828197f5c754afdb5ae2b22e7a_2", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953360Z", "relevant_since": "2023-07-28T10:50:40.949622Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 15, "column": 45, "end_line": 15, "end_column": 60}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239249, "ref": "master", "syntactic_id": "a5e86468d06849ce360d2f98dd598cc2", "match_based_id": "34b0718867bc6be41e9fb63a02bb9e37f92d255bbdcfd0d4e2f23d3e5a7abe19d7604c1a69e607d64bcee997300c04be8a0e8c828197f5c754afdb5ae2b22e7a_3", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "high", "confidence": "low", "created_at": "2023-07-28T10:50:40.953349Z", "relevant_since": "2023-07-28T10:50:40.949619Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 16, "column": 45, "end_line": 16, "end_column": 60}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239248, "ref": "master", "syntactic_id": "92f6e417e8fea3538da053087c4123d8", "match_based_id": "fcbe25e98a078b1eeaf2c1266f8265692a7e7eaaf9e79311743bb0578ea59863a83698161e90deb6b4a328a4486137de103370bd0c31ea90f68318956bc4301b_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953339Z", "relevant_since": "2023-07-28T10:50:40.949616Z", "rule_name": "java.lang.security.audit.unsafe-reflection.unsafe-reflection", "rule_message": "If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.", "location": {"file_path": "cli/src/main/java/com/box/l10n/mojito/cli/command/checks/AbstractCliChecker.java", "line": 16, "column": 24, "end_line": 16, "end_column": 48}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239247, "ref": "master", "syntactic_id": "662bebe12c5c60fe9e76f9486a67a937", "match_based_id": "663592726e1867269ed9b717d5d3bb949473e48305965433777c9855dae26d6edb5cfd71b8362ac143848381804e740c01d31cd422a6d261484f235c09c33ae5_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953329Z", "relevant_since": "2023-07-28T10:50:40.949612Z", "rule_name": "java.lang.security.audit.unsafe-reflection.unsafe-reflection", "rule_message": "If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/service/assetintegritychecker/integritychecker/IntegrityCheckerFactory.java", "line": 84, "column": 24, "end_line": 84, "end_column": 48}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239246, "ref": "master", "syntactic_id": "39713f1791231cc51ba830d1f1b07f9d", "match_based_id": "699dfc4d83b1ed81771b1fedd064dda44a242152e0e839747893e0941e682fef19aaa4f664942704bd785ddff9eb8769cbc9b9c27e08ac95a6f050f03b2fcadd_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953319Z", "relevant_since": "2023-07-28T10:50:40.949610Z", "rule_name": "java.lang.security.audit.unsafe-reflection.unsafe-reflection", "rule_message": "If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/service/drop/exporter/DropExporterService.java", "line": 87, "column": 24, "end_line": 87, "end_column": 48}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239245, "ref": "master", "syntactic_id": "f85a92807f1daea6ab8b2d08f6c0bbb9", "match_based_id": "d684594c197c8cdc3996259f41308dcd48c4b26c7d0e186b95f3ac5e408f67e8daff6a69a0a6bac17f56bf24a3fc87ab01477163b19c050bef5c2745074b2cd4_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953309Z", "relevant_since": "2023-07-28T10:50:40.949607Z", "rule_name": "java.lang.security.audit.unvalidated-redirect.unvalidated-redirect", "rule_message": "Application redirects to a destination URL specified by a user-supplied parameter that is not validated. This could direct users to malicious locations. Consider using an allowlist to validate URLs.", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/rest/cli/CliWS.java", "line": 52, "column": 3, "end_line": 58, "end_column": 4}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239244, "ref": "master", "syntactic_id": "960cd241b84a638883b19af5217644b2", "match_based_id": "da997a1e952f99b1b1d83d5abe3c395340d9b95b3cc2425293e155dccb5cf73f4b169fb6db331886606e70186f889ee764fa55dde237f23f32dc2ba457b0f9e5_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953298Z", "relevant_since": "2023-07-28T10:50:40.949604Z", "rule_name": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "rule_message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "location": {"file_path": "webapp/src/main/java/com/box/l10n/mojito/react/ReactAppController.java", "line": 58, "column": 4, "end_line": 58, "end_column": 18}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239243, "ref": "master", "syntactic_id": "ee08063026dd8f83f780434cf5f3f28c", "match_based_id": "b6f7f01dfa703ee4baee65aecc67d65c414547fd25ed6a238d25f559cf5b7ba6f3241c5f7ddca01033a91842a57107c227efc0e0f0db650315903d95d9de37bb_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953288Z", "relevant_since": "2023-07-28T10:50:40.949601Z", "rule_name": "javascript.browser.open-redirect-pathname.open-redirect-pathname", "rule_message": "The application builds a URL using user-controlled input which can lead to an open redirect vulnerability. An attacker can manipulate the URL and redirect users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such as Cross-site scripting (XSS) or redirecting to a malicious domain for activities such as phishing to capture users' credentials. To prevent this vulnerability perform strict input validation of the domain against an allowlist of approved domains. Notify a user in your application that they are leaving the website. Display a domain where they are redirected to the user. A user can then either accept or deny the redirect to an untrusted site.", "location": {"file_path": "webapp/src/main/resources/public/js/app.js", "line": 152, "column": 40, "end_line": 152, "end_column": 88}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239242, "ref": "master", "syntactic_id": "95d75e905fe96edd42428fe261cb1e07", "match_based_id": "734950f8de309efbd103db23f26ebf051f898859e300ff133d7fff075cadf5f4d05b3903ab39c80685de2ea897365dc8286fd107cc8cef799c295b14feeb3579_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953278Z", "relevant_since": "2023-07-28T10:50:40.949599Z", "rule_name": "javascript.express.security.audit.xss.ejs.var-in-script-src.var-in-script-src", "rule_message": "Detected a template variable used as the 'src' in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent malicious URLs from being injected and could results in a cross-site scripting (XSS) vulnerability. Prefer not to dynamically generate the 'src' attribute and use static URLs instead. If you must do this, carefully check URLs against an allowlist and be sure to URL-encode the result.", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 15, "column": 60, "end_line": 15, "end_column": 96}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239241, "ref": "master", "syntactic_id": "14ad68b3bcdaa84b63f51a9a129b0087", "match_based_id": "734950f8de309efbd103db23f26ebf051f898859e300ff133d7fff075cadf5f4d05b3903ab39c80685de2ea897365dc8286fd107cc8cef799c295b14feeb3579_1", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "ignored", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953267Z", "relevant_since": "2023-07-28T10:50:40.949596Z", "rule_name": "javascript.express.security.audit.xss.ejs.var-in-script-src.var-in-script-src", "rule_message": "Detected a template variable used as the 'src' in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent malicious URLs from being injected and could results in a cross-site scripting (XSS) vulnerability. Prefer not to dynamically generate the 'src' attribute and use static URLs instead. If you must do this, carefully check URLs against an allowlist and be sure to URL-encode the result.", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 16, "column": 60, "end_line": 16, "end_column": 96}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": "2024-02-24T16:24:06.574838Z", "triage_comment": "", "triage_reason": "false_positive", "state_updated_at": null, "categories": ["security"]}, {"id": 29239240, "ref": "master", "syntactic_id": "8c50e60b5e6faecb03e1e20a591e16f4", "match_based_id": "d345e8b6e12b0555d708ef79d37d399bc701a20f659f894a83b9aa021e378160c3113d7e24300f169a9522d458f71cea55ec948b223cc429f635bf4409389e3c_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953256Z", "relevant_since": "2023-07-28T10:50:40.949593Z", "rule_name": "javascript.express.security.audit.xss.mustache.explicit-unescape.template-explicit-unescape", "rule_message": "Detected an explicit unescape in a Mustache template, using triple braces '{{{...}}}' or ampersand '&'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location.", "location": {"file_path": "webapp/src/main/resources/templates/index.html", "line": 8, "column": 26, "end_line": 8, "end_column": 41}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239239, "ref": "master", "syntactic_id": "157ad14776a349dd81d5631e6814abf1", "match_based_id": "8686876b421cf83be08b306ee6ba5bc9eedcdc0e7e97f9dd8e83dba6f424f8944135bf8e4806ede54305c4d37de6a94f052db5398a7672568e7967f072b90da3_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953246Z", "relevant_since": "2023-07-28T10:50:40.949590Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "webapp/src/main/resources/templates/email/sla/openIncident.html", "line": 29, "column": 48, "end_line": 29, "end_column": 99}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239238, "ref": "master", "syntactic_id": "8f2d901cf60bb039aa481743281ffecc", "match_based_id": "e69eea45d1d3edc7d42b686fbcc94f0b905e591d2dc23f451e8d190f040df1ac7e3a170f2c3d86e31c6ef9c7f1877eb88a0a4e62cc6ebe39ed3ccf608f7be9e6_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953236Z", "relevant_since": "2023-07-28T10:50:40.949588Z", "rule_name": "python.django.security.audit.xss.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "webapp/src/main/resources/templates/email/sla/openIncident.html", "line": 29, "column": 51, "end_line": 29, "end_column": 71}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239237, "ref": "master", "syntactic_id": "0c7c4a582faec7636b73ce4edcff9959", "match_based_id": "3c26d7a7939cf8653968b4d6e997d7ad286b556eff53fbe5137d9df3ae31f7542163dfa48cd1aba842d103e6539a9d96c68cc4f0d5c3ea8fa67f71bdfd49dcb1_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953226Z", "relevant_since": "2023-07-28T10:50:40.949585Z", "rule_name": "python.flask.security.xss.audit.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "webapp/src/main/resources/templates/email/sla/openIncident.html", "line": 29, "column": 51, "end_line": 29, "end_column": 71}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239236, "ref": "master", "syntactic_id": "c4a6fa0d9336be64a7c61d9a05e0b5f5", "match_based_id": "185818b01d65ec50d41e036425ea4748c131847c2adf39348eb7bcbb546eedfb722e3c90e3042abf84b30306d7b329f78b6cb2f8c77912eda595baf3dcd03e9e_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953215Z", "relevant_since": "2023-07-28T10:50:40.949581Z", "rule_name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "rule_message": "Service 'db' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "location": {"file_path": "docker/docker-compose.yml", "line": 3, "column": 3, "end_line": 3, "end_column": 5}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239235, "ref": "master", "syntactic_id": "a4f15ffedb59f692434b2cb801d56bfb", "match_based_id": "b9f9baed701091fd9fe0a2e8abcf32cbdb6102780b035c43173b37329204ff3d73d7cf046e93798fcd32df46e1e52121fd7f6452f4813ce7fee3ecb1a0f0073e_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "medium", "confidence": "low", "created_at": "2023-07-28T10:50:40.953205Z", "relevant_since": "2023-07-28T10:50:40.949578Z", "rule_name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "rule_message": "Service 'db' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "location": {"file_path": "docker/docker-compose.yml", "line": 3, "column": 3, "end_line": 3, "end_column": 5}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}, {"id": 29239234, "ref": "master", "syntactic_id": "4be4761fe0ac9fe9ce96e4b4b17fdcb6", "match_based_id": "91a983cb6b621351640391d3b621276a5b57a525fbda86eb9ee4f44c800595e00c77a51561de54fc418f2bd12bb9b3c411bad900167981089fa2b729bd36bce4_0", "state": "unresolved", "repository": {"name": "mojito", "url": "https://github.com/nnayar-r2c/mojito"}, "first_seen_scan_id": 10961529, "triage_state": "untriaged", "severity": "low", "confidence": "medium", "created_at": "2023-07-28T10:50:40.953177Z", "relevant_since": "2023-07-28T10:50:40.949570Z", "rule_name": "java.lang.security.audit.xml-custom-entityresolver.xml-custom-entityresolver", "rule_message": "The application is using an XML parser that has not been safely configured. This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled input. An attacker can include document type definitions (DTDs) which can interact with internal or external hosts. XXE can lead to other vulnerabilities, such as Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side request forgery (SSRF), depending on the application configuration. An attacker can also use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack, also known as a Billion Laughs Attack. By setting a custom `EntityResolver` for all previous security configurations for are bypassed. It is your responsibility to handle security in the `EntityResolver` implementation instead. For more information, see: [Java XXE prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)", "location": {"file_path": "common/src/main/java/com/box/l10n/mojito/okapi/filters/XMLFilter.java", "line": 101, "column": 5, "end_line": 101, "end_column": 63}, "sourcing_policy": {"id": 55894, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"]}]